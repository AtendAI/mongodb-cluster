# uri: mongodb://admin:6WdTM0OSkz3e2K6H@mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0

version: '3.7'

services:
  mongo1:
    image: mongo:6
    networks:
      - network_public
    volumes:
      - mongo1_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=yiwTOJRFw4gGpADi
    ports:
      - 27017:27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == evolution-manager
    command: >
      bash -c "echo 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" }]})' > /docker-entrypoint-initdb.d/rs-init.js && mongod --replSet rs0"

  mongo2:
    image: mongo:6
    networks:
      - network_public
    volumes:
      - mongo2_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=yiwTOJRFw4gGpADi
    ports:
      - 27018:27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == evolution-manager
    command: >
      bash -c "until mongo --host mongo1 --eval 'rs.status()'; do sleep 5; done && mongod --replSet rs0"

  mongo3:
    image: mongo:6
    networks:
      - network_public
    volumes:
      - mongo3_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=yiwTOJRFw4gGpADi
    ports:
      - 27019:27017
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == evolution-manager
    command: >
      bash -c "until mongo --host mongo1 --eval 'rs.status()'; do sleep 5; done && mongod --replSet rs0"

volumes:
  mongo1_data:
    external: true
    name: mongo1_data
  mongo2_data:
    external: true
    name: mongo2_data
  mongo3_data:
    external: true
    name: mongo3_data

networks:
  network_public:
    name: network_public
    external: true
